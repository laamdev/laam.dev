---
import { Image } from "astro:assets";
import { getCollection, render } from "astro:content";

import Layout from "@/layouts/Layout.astro";
import ServiceBadge from "@/components/shared/ServiceBadge.astro";
import ProjectDetail from "@/components/project/ProjectDetail.astro";
import PageTitle from "@/components/shared/PageTitle.astro";
import { buttonVariants } from "@/components/ui/button";
import TechnologyCard from "@/components/project/TechnologyCard.astro";

import { cn } from "@/lib/utils";

export async function getStaticPaths() {
  const projects = await getCollection("projects");

  return projects.map((project) => ({
    params: { id: project.id },
    props: {
      project,
    },
  }));
}

const { project } = Astro.props;

const { data, id } = project;
const {
  title,
  description,
  year,
  mainImage,
  siteUrl,
  client,
  services,
  codeUrl,
  category,
  technologies,
} = data;

const { Content } = await render(project);

export const prerender = true;

console.log(JSON.stringify(project.data.technologies, null, 2));
---

<Layout title={title} description={description}>
  <div class="mt-24 mb-12">
    <PageTitle title={title} />
  </div>

  <div
    class="grid p-4 md:p-6 mt-8 mb-24 rounded grid-cols-1 bg-background-muted sm:grid-cols-2 lg:grid-cols-4 gap-6"
  >
    <ProjectDetail label="Client">
      {client ?? "Personal"}
    </ProjectDetail>
    <ProjectDetail label="Year">
      {year}
    </ProjectDetail>
    <ProjectDetail label="Category">
      {category}
    </ProjectDetail>
    <ProjectDetail label="Explore">
      <div class="flex flex-col gap-2 sm:flex-row">
        <a
          href={siteUrl}
          target="_blank"
          class={cn(
            buttonVariants({ variant: "default", size: "sm" }),
            "w-full sm:w-auto",
            !siteUrl && "opacity-50 cursor-not-allowed pointer-events-none"
          )}
        >
          {siteUrl ? "Visit Site" : "In Progress"}
        </a>
        <a
          href={codeUrl}
          target="_blank"
          class={cn(
            buttonVariants({ variant: "outline", size: "sm" }),
            "w-full sm:w-auto",
            !codeUrl && "opacity-50 cursor-not-allowed pointer-events-none"
          )}
        >
          {codeUrl ? "View Repo" : "Private Repo"}
        </a>
      </div>
    </ProjectDetail>
  </div>

  <Image
    src={mainImage}
    alt={title}
    width={1920}
    height={1080}
    transition:name={`project-${id}`}
    class="w-full h-auto rounded bg-gradient-to-b from-transparent to-zinc-800"
  />

  <div class="my-24 text-center justify-center">
    <div class="max-w-5xl flex flex-col mx-auto gap-y-3">
      <h3
        class="text-xs font-medium tracking-widest uppercase opacity-50 text-center"
      >
        The Task
      </h3>
      <p class="uppercase text-balance text-3xl sm:text-5xl font-serif">
        {description}
      </p>
    </div>

    <hr class="bg-border mt-24 h-0.5 w-full" />
  </div>

  <div class="grid grid-cols-1 sm:grid-cols-5 gap-24 pt-12">
    <div class="col-span-2 flex flex-col gap-y-12">
      <div>
        <p class="text-xs font-medium tracking-widest uppercase opacity-50">
          Scope
        </p>
        <div class="flex flex-wrap gap-2 mt-6">
          {services.map((service) => <ServiceBadge service={service} />)}
        </div>
      </div>

      <div>
        <p class="text-xs font-medium tracking-widest uppercase opacity-50">
          Tech Stack
        </p>
        <div class="flex flex-wrap gap-2 mt-6">
          {
            technologies.map((technology) => (
              <ServiceBadge service={technology} />
            ))
          }
        </div>
      </div>
    </div>
    <div class="prose sm:prose-lg prose-invert col-span-3 max-w-5xl">
      <Content />
    </div>
  </div>
</Layout>
