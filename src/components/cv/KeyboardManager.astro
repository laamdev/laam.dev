---
import { basics } from "@/data/cv.json";
const { profiles } = basics;

const SOCIAL_ICONS: Record<string, any> = {
  GitHub: `<svg
  xmlns="http://www.w3.org/2000/svg"
  style="margin-right: 4px"
  width="16"
  height="16"
  viewBox="0 0 24 24"
  stroke-width="1.5"
  stroke="currentColor"
  fill="none"
  stroke-linecap="round"
  stroke-linejoin="round"
  ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
    d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5"
  ></path></svg>`,
  LinkedIn: `<svg
  xmlns="http://www.w3.org/2000/svg"
  style="margin-right: 4px"
  width="16"
  height="16"
  viewBox="0 0 24 24"
  stroke-width="1.5"
  stroke="currentColor"
  fill="none"
  stroke-linecap="round"
  stroke-linejoin="round"
  ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
    d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z"
  ></path><path d="M8 11l0 5"></path><path d="M8 8l0 .01"></path><path
    d="M12 16l0 -5"></path><path d="M16 16v-3a2 2 0 0 0 -4 0"></path></svg>`,
  X: `
  <svg
  xmlns="http://www.w3.org/2000/svg"
  style="margin-right: 4px"
  width="16"
  height="16"
  viewBox="0 0 24 24"
  stroke-width="1.5"
  stroke="currentColor"
  fill="none"
  stroke-linecap="round"
  stroke-linejoin="round"
  ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
    d="M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c0 -.249 1.51 -2.772 1.818 -4.013z"
  ></path></svg>`,
};

const profilesInfo = profiles.map(({ network, url }) => {
  const icon = SOCIAL_ICONS[network];
  const firstletter = network.charAt(0).toUpperCase();
  return {
    id: network,
    section: "Social",
    title: `Visit ${network}`,
    url,
    icon,
    hotkey: `ctrl+${firstletter}`,
  };
});
---

<footer
  class="print:hidden bg-black text-white bg-primary-50 text-xs border bt-primary-100 fixed bottom-0 w-full py-4 text-center inset-x-0"
>
  Press <kbd class="bg-white text-black px-2 py-1 rounded-md shadow-md"
    >Ctrl</kbd
  > + <kbd class="bg-white text-black px-2 py-1 rounded-md shadow-md">K</kbd>
  to open the command palette.
</footer>

<ninja-keys
  data-info={JSON.stringify(profilesInfo)}
  class="print:hidden"
  hideBreadcrumbs></ninja-keys>

<script>
  import "ninja-keys";

  const ninja = document.querySelector("ninja-keys");

  if (ninja !== null) {
    const info = ninja?.getAttribute("data-info") ?? "[]";
    const paresedInfo = JSON.parse(info);
    const data = paresedInfo.map((item: any) => {
      return {
        ...item,
        handler: () => {
          window.open(item.url, "_blank");
        },
      };
    });

    ninja.data = [
      {
        id: "print",
        title: "Print",
        hotkey: "ctrl+P",
        icon: `<svg
        xmlns="http://www.w3.org/2000/svg"
        style="margin-right: 4px"
        width="16"
        height="16"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        fill="none"
        stroke-linecap="round"
        stroke-linejoin="round"
        >
        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
        <path d="M17 17h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-14a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2"></path>
        <path d="M17 9v-4a2 2 0 0 0 -2 -2h-6a2 2 0 0 0 -2 2v4"></path>
        <path d="M7 13m0 2a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v4a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2z"></path>
        </svg>`,
        section: "Projects",
        handler: () => {
          window.print();
        },
      },
      ...data,
    ];
  }
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  footer {
    view-timeline-name: --revealign;
    view-timeline-axis: block;

    animation: fadeIn 0.3s linear;
    animation-timeline: --revealign;
    animation-range: entry 100% cover 10%;
  }
</style>
